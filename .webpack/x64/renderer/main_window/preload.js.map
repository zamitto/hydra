{"version":3,"file":"main_window/preload.js","mappings":"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","sources":["webpack://hydra/external commonjs2 \"electron\"","webpack://hydra/webpack/bootstrap","webpack://hydra/./src/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// See the Electron documentation for details on how to use preload scripts:\r\n// https://www.electronjs.org/docs/latest/tutorial/process-model#preload-scripts\r\nimport { contextBridge, ipcRenderer } from \"electron\";\r\n\r\nimport type {\r\n  CatalogueCategory,\r\n  GameShop,\r\n  TorrentProgress,\r\n  UserPreferences,\r\n} from \"@types\";\r\n\r\ncontextBridge.exposeInMainWorld(\"electron\", {\r\n  /* Torrenting */\r\n  startGameDownload: (\r\n    repackId: number,\r\n    objectID: string,\r\n    title: string,\r\n    shop: GameShop,\r\n    downloadPath: string\r\n  ) =>\r\n    ipcRenderer.invoke(\r\n      \"startGameDownload\",\r\n      repackId,\r\n      objectID,\r\n      title,\r\n      shop,\r\n      downloadPath\r\n    ),\r\n  cancelGameDownload: (gameId: number) =>\r\n    ipcRenderer.invoke(\"cancelGameDownload\", gameId),\r\n  pauseGameDownload: (gameId: number) =>\r\n    ipcRenderer.invoke(\"pauseGameDownload\", gameId),\r\n  resumeGameDownload: (gameId: number) =>\r\n    ipcRenderer.invoke(\"resumeGameDownload\", gameId),\r\n  onDownloadProgress: (cb: (value: TorrentProgress) => void) => {\r\n    const listener = (\r\n      _event: Electron.IpcRendererEvent,\r\n      value: TorrentProgress\r\n    ) => cb(value);\r\n    ipcRenderer.on(\"on-download-progress\", listener);\r\n    return () => ipcRenderer.removeListener(\"on-download-progress\", listener);\r\n  },\r\n\r\n  /* Catalogue */\r\n  searchGames: (query: string) => ipcRenderer.invoke(\"searchGames\", query),\r\n  getCatalogue: (category: CatalogueCategory) =>\r\n    ipcRenderer.invoke(\"getCatalogue\", category),\r\n  getGameShopDetails: (objectID: string, shop: GameShop, language: string) =>\r\n    ipcRenderer.invoke(\"getGameShopDetails\", objectID, shop, language),\r\n  getRandomGame: () => ipcRenderer.invoke(\"getRandomGame\"),\r\n  getHowLongToBeat: (objectID: string, shop: GameShop, title: string) =>\r\n    ipcRenderer.invoke(\"getHowLongToBeat\", objectID, shop, title),\r\n  getGames: (take?: number, prevCursor?: number) =>\r\n    ipcRenderer.invoke(\"getGames\", take, prevCursor),\r\n\r\n  /* User preferences */\r\n  getUserPreferences: () => ipcRenderer.invoke(\"getUserPreferences\"),\r\n  updateUserPreferences: (preferences: UserPreferences) =>\r\n    ipcRenderer.invoke(\"updateUserPreferences\", preferences),\r\n\r\n  /* Library */\r\n  addGameToLibrary: (\r\n    objectID: string,\r\n    title: string,\r\n    shop: GameShop,\r\n    executablePath: string\r\n  ) =>\r\n    ipcRenderer.invoke(\r\n      \"addGameToLibrary\",\r\n      objectID,\r\n      title,\r\n      shop,\r\n      executablePath\r\n    ),\r\n  getLibrary: () => ipcRenderer.invoke(\"getLibrary\"),\r\n  getRepackersFriendlyNames: () =>\r\n    ipcRenderer.invoke(\"getRepackersFriendlyNames\"),\r\n  openGameInstaller: (gameId: number) =>\r\n    ipcRenderer.invoke(\"openGameInstaller\", gameId),\r\n  openGame: (gameId: number, executablePath: string) =>\r\n    ipcRenderer.invoke(\"openGame\", gameId, executablePath),\r\n  closeGame: (gameId: number) => ipcRenderer.invoke(\"closeGame\", gameId),\r\n  removeGameFromLibrary: (gameId: number) =>\r\n    ipcRenderer.invoke(\"removeGameFromLibrary\", gameId),\r\n  removeGameFromDownload: (gameId: number) =>\r\n    ipcRenderer.invoke(\"removeGameFromDownload\", gameId),\r\n  deleteGameFolder: (gameId: number) =>\r\n    ipcRenderer.invoke(\"deleteGameFolder\", gameId),\r\n  getGameByObjectID: (objectID: string) =>\r\n    ipcRenderer.invoke(\"getGameByObjectID\", objectID),\r\n  onPlaytime: (cb: (gameId: number) => void) => {\r\n    const listener = (_event: Electron.IpcRendererEvent, gameId: number) =>\r\n      cb(gameId);\r\n    ipcRenderer.on(\"on-playtime\", listener);\r\n    return () => ipcRenderer.removeListener(\"on-playtime\", listener);\r\n  },\r\n  onGameClose: (cb: (gameId: number) => void) => {\r\n    const listener = (_event: Electron.IpcRendererEvent, gameId: number) =>\r\n      cb(gameId);\r\n    ipcRenderer.on(\"on-game-close\", listener);\r\n    return () => ipcRenderer.removeListener(\"on-game-close\", listener);\r\n  },\r\n\r\n  /* Hardware */\r\n  getDiskFreeSpace: (path: string) =>\r\n    ipcRenderer.invoke(\"getDiskFreeSpace\", path),\r\n\r\n  /* Misc */\r\n  getOrCacheImage: (url: string) => ipcRenderer.invoke(\"getOrCacheImage\", url),\r\n  ping: () => ipcRenderer.invoke(\"ping\"),\r\n  getVersion: () => ipcRenderer.invoke(\"getVersion\"),\r\n  getDefaultDownloadsPath: () => ipcRenderer.invoke(\"getDefaultDownloadsPath\"),\r\n  openExternal: (src: string) => ipcRenderer.invoke(\"openExternal\", src),\r\n  showOpenDialog: (options: Electron.OpenDialogOptions) =>\r\n    ipcRenderer.invoke(\"showOpenDialog\", options),\r\n  platform: process.platform,\r\n});\r\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","contextBridge","exposeInMainWorld","startGameDownload","repackId","objectID","title","shop","downloadPath","ipcRenderer","invoke","cancelGameDownload","gameId","pauseGameDownload","resumeGameDownload","onDownloadProgress","cb","listener","_event","value","on","removeListener","searchGames","query","getCatalogue","category","getGameShopDetails","language","getRandomGame","getHowLongToBeat","getGames","take","prevCursor","getUserPreferences","updateUserPreferences","preferences","addGameToLibrary","executablePath","getLibrary","getRepackersFriendlyNames","openGameInstaller","openGame","closeGame","removeGameFromLibrary","removeGameFromDownload","deleteGameFolder","getGameByObjectID","onPlaytime","onGameClose","getDiskFreeSpace","path","getOrCacheImage","url","ping","getVersion","getDefaultDownloadsPath","openExternal","src","showOpenDialog","options","platform","process"],"sourceRoot":""}